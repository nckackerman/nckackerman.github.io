name: "CI - Non Prod"
on:
  pull_request:
  push:

# Silly `uses` syntax to work around this issue -> https://github.com/github/feedback/discussions/10679
jobs:
  code:
    # todo: replace with generic build+test command for micronaut. If people need to customize, they can.
    # But initially. everyone should just have a single line here
    uses: nckackerman/nckackerman.github.io/.github/workflows/reuseable_build.yml@master
    with:
      commit-hash: hash

  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup release-template
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: ./.github/release-body-template.md
          output_file: ./.github/new-release-release-body-template.md
          strict: true
          variables: |
            baseUrl=https://github.com/nckackerman/nckackerman.github.io/
            releaseId=new-release
            filePathForDownload=releases/download/
            buildHash=${GITHUB_SHA::6}
            commitMessage=JIRA-1234 adding db for feature x
            changeLog=clic here for change log

      - name: Create Release
        uses: ncipollo/release-action@c4bf6c1ab090090498fb7f3ddc9f99ba5ab619b9
        with:
          name: new-release
          bodyFile: ./.github/new-release-release-body-template.md
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          tag: new-release
          commit: ${{ github.sha }}

      - name: create-img
        id: create-img
        run: |
          curl -s "https://raster.shields.io/badge/DEV-${GITHUB_SHA::6}-green" > dev-deploy.png

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dev-deploy.png
          asset_name: dev-deploy.png
          tag: new-release
          overwrite: true

      - name: update links
        id: update-link
        run: |
          RELEASE_ID=$(curl -H 'Accept: application/vnd.github.v3+json' https://api.github.com/repos/nckackerman/nckackerman.github.io/releases/tags/new-release | jq -r '.id')
          echo ${RELEASE_ID}
          curl -H 'Accept: application/vnd.github.v3+json' \
               https://api.github.com/repos/nckackerman/nckackerman.github.io/releases/tags/new-release | \
               jq -r '.body' | sed 's/\[dev-deploy\]\: $PARTITION_COLUMN.*/[dev-deploy]: https\:\/\/youtube.com/' | \
               tee ./.github/updated-body.md
#          UPDATED_RELEASE_BODY="-d '{\"body\":\" just a temp field v4\" }'"
#          curl -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
#               -H "Accept: application/vnd.github.v3+json" \
#                https://api.github.com/repos/nckackerman/nckackerman.github.io/releases/${RELEASE_ID} \
#                ${UPDATED_RELEASE_BODY}

      - name: Update Release
        uses: ncipollo/release-action@c4bf6c1ab090090498fb7f3ddc9f99ba5ab619b9
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          name: new-release
          tag: new-release
          bodyFile: ./.github/updated-body.md
          allowUpdates: true

#  deploy:
#    name: Deploy my app
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v1
#
#      - uses: chrnorm/deployment-action@releases/v1
#        name: Create GitHub deployment
#        id: deployment
#        with:
#          token: ${{ secrets.REPO_ACCESS_TOKEN }}
#          target_url: http://my-app-url.com
#          description: hello-world-nackerman
#          environment: apple
#          ref: apple
#
#      - name: Update deployment status (success)
#        uses: chrnorm/deployment-status@releases/v1
#        with:
#          token: ${{ secrets.REPO_ACCESS_TOKEN }}
#          target_url: http://my-app-url.com
#          state: "success"
#          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

#  make-badge:
#    runs-on: ubuntu-latest
#    environment:
#      name: v1.0.1
#      url: https://github.com/nckackerman/nckackerman.github.io/releases/tag/1.0.1
#    steps:
#      - name: Set environment variables
#        run: |
#          echo "GITHUB_SHA=$GITHUB_SHA" >> $GITHUB_ENV
#
#      - name: Create Awesome Badge
#        uses: schneegans/dynamic-badges-action@v1.2.0
#        with:
#          auth: ${{ secrets.REPO_ACCESS_TOKEN }}
#          gistID: 6f8c0d7179c381b68eea64374e7dbe8a
#          filename: test.json
#          label: Hello
#          message: 3 | ${{ env.GITHUB_SHA }}
#          color: orange
#
#      - name: create-img
#        id: create-img
#        run: |
#          curl -s "https://raster.shields.io/badge/DEV-${GITHUB_SHA::6}-yellow?link=https://google.com&link=https://github.com/nckackerman/nckackerman.github.io/releases/tag/1.0.1" > build-build.png
#
#      - name: Upload binaries to release
#        uses: svenstaro/upload-release-action@v2
#        with:
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: build-build.png
#          asset_name: build-build.png
#          tag: 1.0.1
#          overwrite: true
#
#  codecov:
#    runs-on: ubuntu-latest
#    steps:
#      - name: build
#        run: |
#          echo "This is where we would run codecov"
#
#  lint:
#    runs-on: ubuntu-latest
#    steps:
#      - name: build
#        run: |
#          echo "This is where we would run lints"
#
#  compatability:
#    runs-on: ubuntu-latest
#    steps:
#      - name: build
#        run: |
#          echo "This is where we would run compatability checks"
#
#  # todo: replace with generic security command for micronaut. If people need to customize, they can.
#  # But initially. everyone should just have a single line here
#  security:
#    uses: nckackerman/nckackerman.github.io/.github/workflows/reuseable_security.yml@master
#    with:
#      image: test
#
#  # todo: create a release and push to artifactory
#  release-create:
#    needs: [code, security]
#    uses: nckackerman/nckackerman.github.io/.github/workflows/release_create.yml@master
#
#  # deploy to dev + qa
#  dev:
#    needs: [release-create]
#    uses: nckackerman/nckackerman.github.io/.github/workflows/reuseable_deploy.yml@master
#    with:
#      env: DEV
#      tag: DEV
#
#  validate-deploy-dev:
#    runs-on: ubuntu-latest
#    environment:
#      name: qa
#      url: https://github.com/nckackerman/nckackerman.github.io/releases/tag/1.0.1
#    needs: [dev]
#    steps:
#      - name: no-op
#        run: |
#          echo "hello no-op"
#
#  qa:
#    needs: [validate-deploy-dev]
#    uses: nckackerman/nckackerman.github.io/.github/workflows/reuseable_deploy.yml@master
#    with:
#      env: QA
#      tag: QA
#
#  # TODO: kick off uat workflow, possible through a tag or something
#  # trigger-uat: